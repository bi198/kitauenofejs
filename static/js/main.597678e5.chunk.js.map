{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","value","setValue","useState","action","setAction","description","setDescription","date","setDate","moment","format","receipts","setReceipts","total","setTotal","error","setError","spinnerValue","setSpinnerValue","useEffect","axios","get","then","response","data","catch","console","React","createElement","className","onSubmit","e","preventDefault","fullDescription","concat","post","parseInt","newTotal","htmlFor","type","id","onChange","target","required","map","receipt","index","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.597678e5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment'; // Thêm thư viện moment.js\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [action, setAction] = useState('paid'); // Giá trị mặc định là 'paid'\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState(moment().format('YYYY-MM-DD')); // Ngày mặc định là hôm nay\n  const [receipts, setReceipts] = useState([]);\n  const [total, setTotal] = useState(0); // Thêm state để lưu tổng giá trị\n  const [error, setError] = useState(null);\n  const [spinnerValue, setSpinnerValue] = useState('Hanamasa'); // State để lưu giá trị của spinner\n\n  useEffect(() => {\n    // Lấy các receipt từ server\n    axios\n      .get('https://kitaueno.onrender.com/api/bill/receipt')\n      .then((response) => {\n        setReceipts(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching receipts:', error);\n        setError('Error fetching receipts');\n      });\n\n    // Lấy tổng giá trị từ server\n    axios\n      .get('https://kitaueno.onrender.com/api/bill/total')\n      .then((response) => {\n        setTotal(response.data.total);\n      })\n      .catch((error) => {\n        console.error('Error fetching total:', error);\n        setError('Error fetching total');\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fullDescription = `${description} - ${spinnerValue}`; // Kết hợp ghi chú và giá trị spinner\n    axios\n      .post('https://kitaueno.onrender.com/add-receipt', {\n        value: parseInt(value),\n        action, // Không thay đổi giá trị action\n        description: fullDescription, // Ghi chú kết hợp với giá trị spinner\n        date,\n      })\n      .then((response) => {\n        setReceipts([response.data, ...receipts]);\n        setValue('');\n        setAction('paid'); // Đặt lại giá trị mặc định là 'paid'\n        setDescription('');\n        setDate(moment().format('YYYY-MM-DD')); // Đặt lại giá trị ngày mặc định là hôm nay\n        setSpinnerValue('option1'); // Đặt lại giá trị spinner mặc định\n\n        // Cập nhật tổng giá trị\n        const newTotal =\n          total + (action === 'received' ? parseInt(value) : -parseInt(value));\n        setTotal(newTotal);\n      })\n      .catch((error) => {\n        console.error('Error adding receipt:', error);\n        setError('Error adding receipt');\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <h1>Kế Hoạch Gia Đình</h1>\n          <h3>Còn Lại: {total} ￥</h3>\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"date\" className=\"form-label\">\n                Ngày:\n              </label>\n              <input\n                type=\"date\"\n                id=\"date\"\n                className=\"form-control\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <label htmlFor=\"value\" className=\"form-label\">\n                  Số:\n                </label>\n                <input\n                  type=\"number\"\n                  id=\"value\"\n                  className=\"form-control\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col\">\n                <label htmlFor=\"action\" className=\"form-label\">\n                  Hành động:\n                </label>\n                <select\n                  id=\"action\"\n                  className=\"form-select\"\n                  value={action}\n                  onChange={(e) => setAction(e.target.value)}\n                  required\n                >\n                  <option value=\"received\">Thêm Vào Quỹ</option>\n                  <option value=\"paid\">Mua</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <label htmlFor=\"description\" className=\"form-label\">\n                  Ghi chú:\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"description\"\n                  className=\"form-control\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n              <div className=\"col\">\n                <label htmlFor=\"spinner\" className=\"form-label\">\n                  Nơi Mua:\n                </label>\n                <select\n                  id=\"spinner\"\n                  className=\"form-select\"\n                  value={spinnerValue}\n                  onChange={(e) => setSpinnerValue(e.target.value)}\n                >\n                  <option value=\"Hanamasa\">Hanamasa</option>\n                  <option value=\"Gyomu\">Gyomu</option>\n                  <option value=\"Aeon\">Aeon</option>\n                  <option value=\"Khác\">Khác</option>\n                  {/* Thêm các tùy chọn khác nếu cần */}\n                </select>\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <button type=\"submit\" className=\"btn btn-primary w-100\">\n                  Ghi vào\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"col-md-8\">\n          <h2>Danh sách các số đã nhập:</h2>\n          <ul className=\"list-group\">\n            {receipts.map((receipt, index) => (\n              <li\n                key={index}\n                className={`list-group-item ${\n                  receipt.action === 'received'\n                    ? 'list-group-item-success'\n                    : 'list-group-item-warning'\n                }`}\n              >\n                <div>\n                  <strong>Ngày:</strong>{' '}\n                  {moment(receipt.date).format('DD/MM/YYYY')} <br />\n                  <strong>Tổng:</strong> {receipt.value} ￥<br />\n                  {receipt.action === 'received' ? 'Thêm Vào Quỹ' : 'Mua'}{' '}\n                  <br />\n                  <strong>Ghi chú:</strong> {receipt.description}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}